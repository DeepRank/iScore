#!/usr/bin/env python
import os
from iScore.graphrank.rank import iscore_svm
import argparse


# parse arguments
parser = argparse.ArgumentParser(description=' iScore - SVM')

# test and train IDS
parser.add_argument('--train', action='store_true', help='train a model')

#case ID
parser.add_argument('--train_class', type=str, default='caseID.lst',help='list of case ID for training. Default: caseID.lst')
parser.add_argument('--trainID', type=str, default='trainID.lst',help='list of case ID for testing. Default: trainID.lst')
parser.add_argument('--testID', type=str, default='testID.lst',help='list of case ID for testing. Default: testID.lst')

# kernel to use
parser.add_argument('--kernel',default='./kernel/',type=str,help='Kernel pickle file to use')

# model names
parser.add_argument('--save_model', type=str, default='svm_model.pkl',help='name of the file to savee the svm model')
parser.add_argument('--load_model', type=str, default='svm_model.pkl',help='name of the svm model to load')

# package the model
parser.add_argument('--package_model',action='store_true',help='Write a single file containing all the info of the training set')
parser.add_argument('--package_name',type=str,default='training_set.tar.gz',help='Name of the packaged model')
parser.add_argument('--graph',default='./graph/',type=str,help='Graph pickle file to use')
parser.add_argument('--include_kernel',action='store_true',help='include the kernel in the packaged model')

# max walk length to use in svm
parser.add_argument('--maxlen', type=int, default=None,help='max walk length of the kernel. Default max len possible with the kernel file')


# get the args
args = parser.parse_args()


iscore_svm(train=args.train,
	       train_class=args.train_class,
	       trainID=args.trainID,
	       testID=args.testID,
		   kernel=args.kernel,
		   save_model=args.save_model,
		   load_model=args.load_model,
		   package_model=args.package_model,
		   package_name=ars.package_name,
		   graph=args.graph,
		   include_kernel=args.include_kernel,
		   maxlen = args.maxlen)
